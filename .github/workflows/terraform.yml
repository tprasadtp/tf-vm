name: terraform
# Triggers
on:
  push:
    branches:
      - "*"
  pull_request:
jobs:
  test:
    runs-on: ubuntu-latest
    # Test Matrix
    strategy:
      matrix:
        distro: ["ubuntu"]
    # Override Provider configs on CI
    env:
      LIBVIRT_DEFAULT_URI: "qemu:///system"
      # UNDOC:: Force use qemu on actions
      TERRAFORM_LIBVIRT_TEST_DOMAIN_TYPE: "qemu"
    # Steps
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Install Packages
        run: |
          sudo apt-get -qq update
          sudo apt-get install -qq -y \
            libvirt-daemon-system \
            libvirt-dev \
            virt-manager \
            mkisofs \
            python3-pip \
            python3-setuptools \
            python3-libvirt \
            python3-lxml

      - name: Permission fixer
        run: |
          echo 'security_driver="none"' | sudo tee /etc/libvirt/qemu.conf
          # Daemon
          echo "-----------"
          echo "Restarting Daemon"
          sudo systemctl restart libvirtd
          echo "Status of Daemon"
          sudo systemctl status libvirtd

      - name: Platform Info
        run: |
          echo "Virt Detect"
          echo "-----------"
          systemd-detect-virt
          echo "KVM Status"
          echo "-----------"
          # Because kvm-ok might return non zero we will make it drink some Veritaserum
          sudo kvm-ok || true
          # Host status
          echo "Host Validation"
          echo "-----------"
          sudo -E virt-host-validate || true

      - name: Start default pool
        run: |
          sudo mkdir -p /var/lib/libvirt/images
          sudo virsh pool-define test/default-pool.xml
          sudo virsh pool-start default

      - name: Install Python Dependencies
        run: |
          curl -sSfOL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py
          python3 install-poetry.py -y
          poetry --version
          poetry install
        env:
          POETRY_VIRTUALENVS_IN_PROJECT: true

      - name: Fetch Images
        run: |
          ./scripts/${OS_FLAVOR}.sh
        env:
          OS_FLAVOR: ${{ matrix.distro }}

      - name: Test
        run: |
          source .venv/bin/activate
          sudo make test-${OS_FLAVOR}
        env:
          OS_FLAVOR: ${{ matrix.distro }}
